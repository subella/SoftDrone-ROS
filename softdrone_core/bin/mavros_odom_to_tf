#!/usr/bin/env python
import rospy
import tf2_ros
from tf import transformations as ts
from geometry_msgs.msg import TransformStamped
from nav_msgs.msg import Odometry

transform_msg = TransformStamped()

def odom_cb(msg):

    transform_msg.header.stamp = msg.header.stamp
    transform_msg.header.frame_id = 'map'
    transform_msg.child_frame_id = 'base_link'

    transform_msg.transform.translation.x = msg.pose.pose.position.x
    transform_msg.transform.translation.y = msg.pose.pose.position.y
    transform_msg.transform.translation.z = msg.pose.pose.position.z

    transform_msg.transform.rotation.x = msg.pose.pose.orientation.x
    transform_msg.transform.rotation.y = msg.pose.pose.orientation.y
    transform_msg.transform.rotation.z = msg.pose.pose.orientation.z
    transform_msg.transform.rotation.w = msg.pose.pose.orientation.w

    broadcaster.sendTransform(transform_msg)

if __name__ == '__main__':

    rospy.init_node('mavros_to_odom_tf')
    broadcaster = tf2_ros.TransformBroadcaster()
    rospy.Subscriber('/mavros/odometry/in', Odometry, odom_cb, queue_size=1)
    rospy.spin()

