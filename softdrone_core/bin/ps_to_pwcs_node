#!/usr/bin/env python
from geometry_msgs.msg import PoseStamped, PoseWithCovarianceStamped
import rospy
import numpy as np
import time
import tf

def pose_cb(msg):
    # Assumes target is stationary
    pose_cov = PoseWithCovarianceStamped()
    pose_cov.header = msg.header
    quat = [msg.pose.orientation.x, msg.pose.orientation.y, msg.pose.orientation.z, msg.pose.orientation.w]

    q_rot = tf.transformations.quaternion_from_euler(np.pi, 0, 0)
    quat = tf.transformations.quaternion_multiply(quat, q_rot)
    pose_cov.pose.pose.position = msg.pose.position
    pose_cov.pose.pose.orientation.x = quat[0]
    pose_cov.pose.pose.orientation.y = quat[1]
    pose_cov.pose.pose.orientation.z = quat[2]
    pose_cov.pose.pose.orientation.w = quat[3]
    
    pose_cov.pose.covariance = covariance
    pose_cov_pub.publish(pose_cov)

rospy.init_node('ps_to_pwcs_node')
translation_cov = rospy.get_param("~observation_covariance_translation")
rotation_cov = rospy.get_param("~observation_covariance_rotation")
cov_mat = np.diag([translation_cov] * 3 + [rotation_cov] * 3) 
covariance = cov_mat.flatten().tolist()
rospy.Subscriber('~pose', PoseStamped, pose_cb, queue_size=1)
pose_cov_pub = rospy.Publisher('~pose_cov', PoseWithCovarianceStamped, queue_size=1)
rospy.spin()
