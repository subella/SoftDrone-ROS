from stlib.scene import MainHeader, ContactHeader
from stlib.visuals import ShowGrid
from stlib.physics.rigid import Floor
from stlib.physics.rigid import Cube
from stlib.physics.constraints import FixedBox
from softrobots.actuators import PullingCable
from sdsofa.utils.utils import parse_json
from splib.animation import animate
from stlib.scene import MainHeader, ContactHeader, Scene

def createScene(rootNode):
    """This is my first scene"""
    # MainHeader(rootNode, gravity=[0.0,-981.0,0.0])
    # ContactHeader(rootNode, alarmDistance=15, contactDistance=10)

    # Floor(rootNode,
    #       translation=[0.0,-160.0,0.0],
    #       isAStaticObject=True)

    # Cube(rootNode,
    #       translation=[0.0,0.0,0.0],
    #       uniformScale=20.0)
    scene = Scene(rootNode, plugins=["SoftRobots",
                                     "SofaSparseSolver"])
    scene.VisualStyle.displayFlags = "showBehavior"

    rootNode.dt = 0.005
    # rootNode.createObject("VisualStyle", displayFlags="showForceFields showBehaviorModels")
    # rootNode.createObject("FreeMotionAnimationLoop")
    # rootNode.createObject("GenericConstraintSolver", maxIterations=250, tolerance=1e-20)
    # rootNode.createObject("CollisionPipeline")
    # rootNode.createObject("BruteForceDetection")
    # rootNode.createObject("CollisionResponse")
    # rootNode.createObject("MinProximityIntersection", name="Proximity", alarmDistance="0.8", contactDistance="0.5")
    # rootNode.createObject("CollisionGroup")

    neo = rootNode.createChild("NeoHookean")
    # neo.createObject('EulerImplicitSolver', name='ODEsolver', rayleighStiffness='0.1', rayleighMass='0.1')
    neo.createObject('StaticSolver', newton_iterations='10', correction_tolerance_threshold='1e-4', residual_tolerance_threshold='1e-2', should_diverge_when_residual_is_growing='0')  
    neo.createObject("CGLinearSolver", iterations=25, name="linear_solver", tolerance="1.0e-9", threshold="1.0e-9")
    neo.createObject("MechanicalObject", name="dofs")
    
    tetras = neo.createChild("tetras")
    loader = tetras.createObject("MeshVTKLoader", filename="/home/subella/catkin_ws2/src/SoftDrone-ROS/softdrone_sofa/mesh/simple_finger_2.vtk", scale="1")
    tetras.createObject("Mesh", src=loader)
    tetras.createObject("MechanicalObject", src=loader, name="dofs")
    tetras.createObject("UniformMass", totalMass=0)
    tetras.createObject("TetrahedronSetTopologyContainer", name="Container", src=loader)
    tetras.createObject("TetrahedronHyperelasticityFEMForceField", name="FEM", ParameterSet="1e4 11034.483", materialName="NeoHookean")
    # tetras.createObject("TetrahedronFEMForceField", template='Vec3d',
    #                                              method='large', name='forcefield',
    #                                              poissonRatio=0.4,  youngModulus=1e4)
    box = tetras.createObject("BoxROI", drawBoxes=1, box="-25 -25 -5 25 25 25", name="box")
    # box.init()
    # # print box.indices
    tetras.createObject("FixedConstraint", indices="@box.indices")
    tetras.createObject("UncoupledConstraintCorrection")
    # tetras.createObject('LinearSolverConstraintCorrection', solverName=solver.name)
    # solver = tetras.createObject('CGLinearSolver', iterations=25, name="linear_solver", tolerance="1.0e-9", threshold="1.0e-9")
    # <BoxROI drawBoxes="1" box="-25 -25 -5 25 25 25" name="box"/>
    #         <UncoupledConstraintCorrection />
    #     <FixedConstraint indices="@box.indices"/>


    # box = FixedBox(tetras, atPositions=[-25,-25,-5,25,25,25],
    #               doVisualization=True)
    # box.BoxROI.init()

    all_eyelet_locations = parse_json("/home/subella/catkin_ws2/src/SoftDrone-ROS/softdrone_sofa/mesh/finger_30x35_eyelets.json")["tendons"]
    for eyelets_wrt_finger_translations in all_eyelet_locations:
        # for eyelet_wrt_finger_translation in eyelets_wrt_finger_translations:
        #     box = addOrientedBoxRoi(self.node, position=deformableObject.dofs.getData("rest_position"), name="BoxROI",
        #                         translation=eyelet_wrt_finger_translation, scale=[8, 8, 40])
        #     box.init()
        #     deformableObject.init()
        #     groupIndices.append([ind[0] for ind in box.indices])

        cable = PullingCable(tetras,
                             valueType="force",
                             # pullPointLocation=eyelets_wrt_finger_translations[0][0],
                             cableGeometry=eyelets_wrt_finger_translations)
        cable = cable.getObject("CableConstraint")
        cable.value = 1000

    # dofs = [[153.47921797157855, -55.476282021179046, 5.050675170534513], [165.7535184312859, -67.076197142181, 1.1474066871743047], [155.31083382878265, -63.79381952046785, 21.977825192805895], [195.55282490511217, -63.48852032294539, 13.659650151269355], [198.69518867052287, -49.96375928009471, 23.85568550945308], [187.41957875831272, -59.52366615758898, 34.74371297384044], [169.56870451625971, -73.78292063040908, 17.5247334942489], [169.54115266293377, -65.57162671162968, 34.088956611407276], [182.27723473693615, -69.93726581938903, 4.675047486339213], [182.63785401084172, -71.96010918898064, 22.668772535845925], [161.99558424716292, -49.834449368652464, 34.055722530079116], [177.14722006385344, -58.33765297903088, 32.57414405654395], [175.25097736347755, -51.92557051665844, 36.35022461375138], [171.2449251337998, -61.90750473109696, 28.531256538356573], [64.45120078394359, -20.558063662414323, 32.525900793025], [59.18339226312459, -37.826284863152075, 28.007063397257898], [81.698592985627, -33.44737352924677, 29.235998566407513], [158.3065693627033, -55.52538787183019, 29.1330078414508], [160.6549750659579, -60.560899848831106, 26.3952607029262], [48.01014338897946, -25.314430053377777, 28.758596782954427], [33.85005443142587, -45.27908829604234, 24.327845082722643], [156.166903359064, -61.178490146097424, 24.101292038071314], [151.94224185218417, -38.84407526244856, 38.11616297022091], [176.34223815927533, -42.6717408874838, 41.63328483195024], [34.05260520673121, -24.320481864856276, 23.413065592004298], [21.023855838404756, -30.712420551198583, 25.216461636810617], [4.437724699185226, -40.22509098445974, 26.524644572391225], [80.09609904501998, -15.450030771591662, 34.85159746263463], [142.0897420943135, -47.90090845009758, 30.867333249164357], [75.21624504880799, -46.23738047723928, 26.459597053779962], [184.66719568754925, -57.37439300588948, 35.32945091851907], [50.62762989136891, -52.07292954637508, 23.48463698624448], [8.350714723158736, -26.527227849595928, 30.94931462266913], [-2.42835, -17.0475, 17.5], [-15.0, 0.0, 17.5], [3.01981e-14, 0.0, 17.5], [8.170563071054147, -51.72973860047127, 15.727783378636685], [12.8818, -19.2501, 17.5], [162.25672942151988, -31.057960059842426, 46.609728767743356], [15.0, 0.0, 17.5], [6.36336, -9.0744, 17.5], [-18.1694, -18.9335, 17.5], [129.01695782630244, -15.183222154483058, 46.68950066179618], [135.95283947434442, -33.088652256855916, 37.794154263030784], [146.01636156246337, -21.430095755792042, 46.6562658556703], [97.455973349116, -25.687942542323725, 34.23286662098113], [95.95096180612057, -11.824761251964647, 39.805656856185266], [112.09812836646617, -13.137533356770208, 42.81664382299716], [110.96062922721882, -30.7599125929689, 35.644052057287176], [123.58450309393244, -27.007570118216485, 39.73801663463871], [121.8843850841037, -42.16970348631332, 32.29375272976111], [100.84478659605493, -41.25236569442214, 29.768100224827645], [157.2764453820893, -63.68895176276225, 23.052123231758706], [185.2510374185633, -59.96912356197125, 34.177145063298646], [152.40867272278783, -47.943643898750906, 19.414254708695115], [160.60898733174233, -51.96252101272484, 10.346756427843685], [138.7601537360117, -37.777529943449835, 17.10652260285907], [154.50120630157392, -42.73146094029996, 10.524415072723212], [165.4918181179661, -43.705644171752056, -3.6110517345098416], [149.62642627675743, -32.7131928221986, 2.2234086931673716], [-15.6433, -8.66528, 8.75], [-15.0, 0.0, -5.32907e-14], [-16.9251, -14.8712, -1.39333e-14], [-14.79128459378981, -8.781216417056218, -9.460016724048657], [-15.107113894026261, -1.7786461009312382, -18.970210339993468], [-7.745959984865852, -23.798425525607524, -15.432448220531482], [128.2151960474962, -28.991835135327594, 1.8209444661733367], [116.49063419578088, -35.55377627279995, 16.00217832580285], [105.72525115776176, -31.071107610081146, -0.9284638443629296], [93.65665365388377, -38.89161857702628, 13.265625237743778], [68.57174053564611, -44.85706884984488, 10.332931981702753], [81.29992890366245, -39.81936563080536, -2.3822791602343933], [47.279673306532665, -49.71964190795271, 7.256464929993995], [55.4730168071644, -50.16416446502262, -6.595998613355717], [11.605034250670071, -48.29005092204733, 2.3648202426392095], [11.498890554034768, -50.32345276359607, -12.408916292568623], [170.1993609237497, -32.731667537918874, 5.278319877057009], [184.83302990443286, -33.59755762148186, 7.9993445187814745], [187.81979495560972, -39.58486167532889, 5.180132024079027], [182.27793910220922, -42.97784874600918, 0.8843026026887364], [71.14899723920803, -15.740523324260508, -4.473880606303195], [87.5458014519918, -25.28732844833959, -0.8012447753905699], [66.0471429174513, -33.71419934509043, -7.334225692073707], [170.34366615892876, -42.66845188944709, -1.374297346720423], [166.99846361592634, -38.39842093679514, 1.2928684801237602], [54.905673346069975, -20.71505316566114, -8.77853904969834], [41.372925234995925, -43.251549190535556, -12.45974711693554], [159.11119119901142, -23.312978215831063, 9.507000416468227], [184.75949874381726, -25.050695734159362, 13.113830502776041], [39.627019966717754, -22.871956269753397, -9.37661797795598], [28.443969237984874, -29.49384818826254, -17.362329694886718], [13.777115611007343, -39.62746203127925, -24.26597776384239], [86.01776922018567, -6.964427341795882, 2.0712222338452855], [195.25510314854031, -38.16299254447474, 8.043794567297214], [16.97798596457305, -22.6102267993068, -23.068217059298412], [2.0022510082933094, -11.71163637692997, -18.161901300948916], [0.42555507775240237, 3.482919817471825, -17.42393567428778], [19.839789564634657, -13.245468146550266, -14.862843260434488], [170.29087437960058, -13.851976507295982, 15.819545169695214], [18.04863795960958, 5.833817804502147, -15.426703705832205], [10.216848164700822, -3.711809803482755, -17.124388665559323], [135.86529362414316, -0.80809462369563, 13.181937710043645], [153.1283151919846, -6.982324118308522, 15.883118939992084], [142.6962163027677, -19.33847908408117, 7.9967242305628075], [102.01286656987025, -1.147163530842395, 5.676661587365736], [102.97748428543592, -16.016249652756578, 3.7057393734030146], [118.69854953604258, -1.412551047573958, 8.736376585060837], [117.48176567577619, -19.366074726158175, 3.718514378528142], [130.61018437727003, -13.86071900480151, 7.705378286442738], [197.1239134945923, -40.26952674533406, 6.998726401347411], [167.80571826696504, -45.43854587344175, -4.847714462310724], [92.81587615457029, -4.720705289897766, 22.122516779572656], [75.22490276985864, -14.785348297302084, 15.994815674347887], [58.56189908478786, -12.344099628533739, 12.731702269017392], [45.178758978764556, -22.143616564952676, 8.569830540716751], [29.224295955634183, -32.66843273366026, 4.7678520537233195], [19.959451479592516, -20.31289638445407, 2.405577105958427], [5.866822489638959, -28.781016009305596, -1.6485224028416687], [13.7472, -14.8545, 2.10387e-14], [183.45537261102356, -42.87069439242971, 29.869370101362623], [189.0259023332102, -48.29738918668765, 21.23843457161645], [177.47542224269213, -29.336860926866056, 29.415198591512354], [186.43582370045306, -36.40618619492059, 20.612969120850508], [14.581, -8.62051, 8.75], [15.0, 0.0, 6.03961e-14], [16.32192924110297, -5.964208178781394, -7.989027220916935], [161.9465070221729, -19.486586076863787, 31.88074022200666], [143.34441664161994, -11.65518334445816, 30.656853902131044], [127.71217487692451, -5.652333062268924, 29.350898821174244], [108.85595661655779, -7.016609139833048, 24.365957283454666], [-9.74459e-15, 0.0, 2.32143], [7.22042077335612, 3.340339132789194, -8.51958938893808], [-5.948665219872753, 0.621823704296677, -8.527918628100366], [158.97181653399053, -57.7880327365224, 16.532544877298324], [161.82999052200074, -54.38889078668882, 8.960602191738651], [163.79630196628628, -48.9074796210958, 2.703172148250509], [190.30271043797384, -50.66440892666853, 19.972857650761252], [187.3443727515817, -54.07885132217615, 27.712109389980533], [192.65633706323445, -44.415264811896414, 14.01406955119699], [162.58317654018347, -50.19766154623363, 0.9632174922966126], [157.26061473192775, -59.33068723174298, 14.987181564206859], [190.03042061494907, -55.02994999018046, 28.161599391288767], [196.00575087215273, -45.40072304465283, 14.45933125930948], [165.49165053447166, -45.88423496436292, -5.4965399311456125], [165.12255419813516, -47.73030394616727, -2.2417791817093358], [157.02905169311137, -61.67279848710181, 19.276918933868], [196.80278608299375, -42.648803591288846, 10.512427887772503], [199.02994822567285, -40.217904569832946, 7.941527874933643], [187.70405561984742, -57.62522329070021, 31.423528652926628], [163.4099924729569, -64.42425524104796, 28.11226230215717], [158.3835160876787, -59.91077996821815, 16.929411136483253], [177.6568090686521, -62.50429522925446, 33.80898000366789], [188.08940848285368, -56.01416100629424, 28.612113747450795], [192.526776313105, -38.794616357515075, 2.888099809775165], [195.032717539626, -44.585080570303404, 12.665611762538417], [177.12865811083668, -41.94614288758326, -3.564491551753894], [164.63659876239143, -49.29750061380506, 0.48428953964950716], [187.46314493617905, -37.907466305075836, -2.7033292048239463], [178.98857760070243, -56.79534091318562, -6.884327402528077], [192.65233987837814, -54.512302658225046, -0.7955951222487403], [169.22407733856411, -42.711100485618644, 19.611606283224024]]
    # def myanimate(targets, factor):
    #     # print tetras.dofs.position
    #     tetras.dofs.position = dofs

    # animate(myanimate, {"targets": [neo]}, duration=5)

    return rootNode